// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "swiftkube.io/swiftkube/pkg/apis/swiftdeploymentcontroller/v1alpha1"
)

// SwiftDeploymentLister helps list SwiftDeployments.
// All objects returned here must be treated as read-only.
type SwiftDeploymentLister interface {
	// List lists all SwiftDeployments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SwiftDeployment, err error)
	// SwiftDeployments returns an object that can list and get SwiftDeployments.
	SwiftDeployments(namespace string) SwiftDeploymentNamespaceLister
	SwiftDeploymentListerExpansion
}

// swiftDeploymentLister implements the SwiftDeploymentLister interface.
type swiftDeploymentLister struct {
	indexer cache.Indexer
}

// NewSwiftDeploymentLister returns a new SwiftDeploymentLister.
func NewSwiftDeploymentLister(indexer cache.Indexer) SwiftDeploymentLister {
	return &swiftDeploymentLister{indexer: indexer}
}

// List lists all SwiftDeployments in the indexer.
func (s *swiftDeploymentLister) List(selector labels.Selector) (ret []*v1alpha1.SwiftDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SwiftDeployment))
	})
	return ret, err
}

// SwiftDeployments returns an object that can list and get SwiftDeployments.
func (s *swiftDeploymentLister) SwiftDeployments(namespace string) SwiftDeploymentNamespaceLister {
	return swiftDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SwiftDeploymentNamespaceLister helps list and get SwiftDeployments.
// All objects returned here must be treated as read-only.
type SwiftDeploymentNamespaceLister interface {
	// List lists all SwiftDeployments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SwiftDeployment, err error)
	// Get retrieves the SwiftDeployment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SwiftDeployment, error)
	SwiftDeploymentNamespaceListerExpansion
}

// swiftDeploymentNamespaceLister implements the SwiftDeploymentNamespaceLister
// interface.
type swiftDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SwiftDeployments in the indexer for a given namespace.
func (s swiftDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SwiftDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SwiftDeployment))
	})
	return ret, err
}

// Get retrieves the SwiftDeployment from the indexer for a given namespace and name.
func (s swiftDeploymentNamespaceLister) Get(name string) (*v1alpha1.SwiftDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("swiftdeployment"), name)
	}
	return obj.(*v1alpha1.SwiftDeployment), nil
}
